// Generated by CoffeeScript 1.3.3
(function() {
  var Stock, StockCollection, StockListView, TickerView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Stock = (function(_super) {

    __extends(Stock, _super);

    function Stock() {
      return Stock.__super__.constructor.apply(this, arguments);
    }

    Stock.prototype.idAttribute = 'symbol';

    Stock.prototype.initialize = function(object, options) {
      return object.price = 15.223;
    };

    return Stock;

  })(Backbone.Model);

  StockCollection = (function(_super) {

    __extends(StockCollection, _super);

    function StockCollection() {
      return StockCollection.__super__.constructor.apply(this, arguments);
    }

    StockCollection.prototype.model = Stock;

    return StockCollection;

  })(Backbone.Collection);

  StockListView = (function(_super) {

    __extends(StockListView, _super);

    function StockListView() {
      return StockListView.__super__.constructor.apply(this, arguments);
    }

    StockListView.prototype.initialize = function() {
      this.collection.bind('add', this.addItem, this);
      this.collection.bind('remove', this.render, this);
      return this.template = _.template($('#itemTemplate').html());
    };

    StockListView.prototype.addItem = function(model) {
      var newItem,
        _this = this;
      newItem = this.template(model.toJSON());
      newItem = $(newItem);
      $(newItem).find('button.remove').click(function() {
        return _this.collection.remove(model);
      });
      return this.$el.append(newItem);
    };

    StockListView.prototype.render = function() {
      var _this = this;
      this.$el.empty();
      return this.collection.each(function(item) {
        return _this.addItem(item);
      });
    };

    return StockListView;

  })(Backbone.View);

  TickerView = (function(_super) {

    __extends(TickerView, _super);

    function TickerView() {
      return TickerView.__super__.constructor.apply(this, arguments);
    }

    TickerView.prototype.events = {
      "click #addSymbolButton": "addSymbol"
    };

    TickerView.prototype.initialize = function() {
      this.collection || (this.collection = new StockCollection);
      this.listView = new StockListView({
        el: this.$('#portfolio'),
        collection: this.collection
      });
      return console.log(this.collection);
    };

    TickerView.prototype.render = function() {
      return this.listView.render();
    };

    TickerView.prototype.addSymbol = function(e) {
      var symbol;
      symbol = this.$('#theSymbol').val();
      return this.collection.add({
        symbol: symbol
      });
    };

    return TickerView;

  })(Backbone.View);

  window.App || (window.App = {});

  window.App.TickerView = TickerView;

  window.App.StockCollection = StockCollection;

}).call(this);
